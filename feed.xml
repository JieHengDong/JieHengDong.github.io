<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://jiehengdong.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://jiehengdong.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-06-11T02:07:13+00:00</updated><id>https://jiehengdong.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://jiehengdong.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://jiehengdong.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://jiehengdong.github.io/blog/2024/tabs</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="be7bbc2b-a7a9-43dc-8fbf-1b891ec13948" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="be7bbc2b-a7a9-43dc-8fbf-1b891ec13948" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="282b78a3-ffb3-43a3-94fe-42adcc019f4c" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="282b78a3-ffb3-43a3-94fe-42adcc019f4c" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="e958393f-57d6-4dfc-b9b3-100351288722" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="e958393f-57d6-4dfc-b9b3-100351288722" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://jiehengdong.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://jiehengdong.github.io/blog/2024/typograms</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://jiehengdong.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://jiehengdong.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">Dissolve Shader</title><link href="https://jiehengdong.github.io/blog/2024/Shader-Dissolve/" rel="alternate" type="text/html" title="Dissolve Shader"/><published>2024-04-02T15:53:53+00:00</published><updated>2024-04-02T15:53:53+00:00</updated><id>https://jiehengdong.github.io/blog/2024/Shader-Dissolve</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/Shader-Dissolve/"><![CDATA[<h2 id="溶解效果">溶解效果</h2> <div class="language-glsl highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Shader</span> <span class="s">"Universal Render Pipeline/Wireframe/DisplacementFade"</span>
<span class="p">{</span>
    <span class="n">Properties</span>
    <span class="p">{</span>
        <span class="n">_MainTex</span> <span class="p">(</span><span class="s">"Main Texture"</span><span class="p">,</span> <span class="mi">2</span><span class="n">D</span><span class="p">)</span> <span class="o">=</span> <span class="s">"white"</span> <span class="p">{</span> <span class="p">}</span>
        <span class="n">_WireThickness</span> <span class="p">(</span><span class="s">"Wire Thickness"</span><span class="p">,</span> <span class="n">RANGE</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">800</span><span class="p">))</span> <span class="o">=</span> <span class="mi">100</span>
        <span class="p">[</span><span class="n">HDR</span><span class="p">]</span> <span class="n">_WireColor</span> <span class="p">(</span><span class="s">"Wire Color"</span><span class="p">,</span> <span class="n">Color</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">[</span><span class="n">Toggle</span><span class="p">(</span><span class="n">INVERT</span><span class="p">)]</span> <span class="n">_INVERT</span><span class="p">(</span><span class="s">"Invert"</span><span class="p">,</span> <span class="n">Float</span><span class="p">)</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="n">_MovingSlider</span> <span class="p">(</span><span class="s">"Moving Slider"</span><span class="p">,</span> <span class="n">RANGE</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span> <span class="o">=</span> <span class="mi">10</span>
        <span class="n">_Extrude</span><span class="p">(</span><span class="s">"Extrude Amount"</span><span class="p">,</span> <span class="n">RANGE</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span> <span class="o">=</span> <span class="mi">10</span>
        <span class="n">_WireFrameStay</span> <span class="p">(</span><span class="s">"Wire Stay"</span><span class="p">,</span> <span class="n">RANGE</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span> <span class="o">=</span> <span class="mi">0</span>
 
    <span class="p">}</span>
    <span class="n">SubShader</span>
    <span class="p">{</span>
        <span class="n">Tags</span> <span class="p">{</span><span class="s">"RenderType"</span> <span class="o">=</span> <span class="s">"Opaque"</span> <span class="s">"RenderPipeline"</span> <span class="o">=</span> <span class="s">"UniversalPipeline"</span> <span class="p">}</span>
        <span class="n">LOD</span> <span class="mi">100</span>
 
        <span class="n">Pass</span>
        <span class="p">{</span>
            <span class="c1">// Wireframe shader based on the the following</span>
            <span class="c1">// http://developer.download.nvidia.com/SDK/10/direct3d/Source/SolidWireframe/Doc/SolidWireframe.pdf</span>
 
            <span class="n">HLSLPROGRAM</span>
            <span class="cp">#pragma require geometry
</span> 
            <span class="cp">#pragma vertex vert
</span>            <span class="cp">#pragma geometry geom
</span>            <span class="cp">#pragma fragment frag
</span>            <span class="cp">#pragma shader_feature INVERT
</span>            <span class="c1">// -------------------------------------</span>
            <span class="c1">// Unity defined keywords</span>
            <span class="cp">#pragma multi_compile_instancing
</span> 
            <span class="cp">#include</span> <span class="cpf">"Packages/com.unity.render-pipelines.universal/Shaders/UnlitInput.hlsl"</span><span class="cp">
</span>        <span class="c1">//    #include "UnlitInput.hlsl"</span>
 
            <span class="kt">float</span> <span class="n">_WireThickness</span><span class="p">;</span>
            <span class="n">float4</span> <span class="n">_WireColor</span><span class="p">;</span>
            <span class="kt">sampler2D</span> <span class="n">_MainTex</span><span class="p">;</span>
            <span class="kt">float</span> <span class="n">_MovingSlider</span><span class="p">;</span>
            <span class="kt">float</span> <span class="n">_Extrude</span><span class="p">;</span>
            <span class="kt">float</span> <span class="n">_WireFrameStay</span><span class="p">;</span>
 
            <span class="k">struct</span> <span class="n">Attributes</span>
            <span class="p">{</span>
                <span class="n">float4</span> <span class="n">positionOS</span>       <span class="o">:</span> <span class="n">POSITION</span><span class="p">;</span>
                <span class="n">UNITY_VERTEX_INPUT_INSTANCE_ID</span>
                <span class="n">float4</span> <span class="n">uv</span> <span class="o">:</span> <span class="n">TEXCOORD0</span><span class="p">;</span>
                <span class="n">float3</span> <span class="n">normal</span> <span class="o">:</span><span class="n">NORMAL</span><span class="p">;</span>
            <span class="p">};</span>
 
            <span class="k">struct</span> <span class="n">v2g</span>
            <span class="p">{</span>
                <span class="n">float4</span> <span class="n">projectionSpaceVertex</span> <span class="o">:</span> <span class="n">SV_POSITION</span><span class="p">;</span>
                <span class="n">float4</span> <span class="n">uv</span> <span class="o">:</span><span class="n">TEXCOORD0</span><span class="p">;</span>
                <span class="kt">float</span> <span class="n">movingPos</span> <span class="o">:</span> <span class="n">TEXCOORD1</span><span class="p">;</span>
                <span class="n">UNITY_VERTEX_OUTPUT_STEREO</span>
            <span class="p">};</span>
 
            <span class="n">v2g</span> <span class="n">vert</span><span class="p">(</span><span class="n">Attributes</span> <span class="kr">input</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">v2g</span> <span class="kr">output</span> <span class="o">=</span> <span class="p">(</span><span class="n">v2g</span><span class="p">)</span><span class="mi">0</span><span class="p">;</span>
 
                <span class="n">UNITY_SETUP_INSTANCE_ID</span><span class="p">(</span><span class="kr">input</span><span class="p">);</span>
                <span class="n">UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO</span><span class="p">(</span><span class="kr">output</span><span class="p">);</span>
 
                <span class="c1">// move over the mesh y axis using a slider</span>
                <span class="c1">// with option to invert</span>
                <span class="cp">#if INVERT
</span>                <span class="kt">float</span> <span class="n">movingPos</span> <span class="o">=</span> <span class="kr">input</span><span class="p">.</span><span class="n">positionOS</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">_MovingSlider</span><span class="p">;</span>
                <span class="cp">#else
</span>                <span class="kt">float</span> <span class="n">movingPos</span> <span class="o">=</span> <span class="mi">1</span><span class="o">-</span> <span class="kr">input</span><span class="p">.</span><span class="n">positionOS</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">_MovingSlider</span><span class="p">;</span>
                <span class="cp">#endif
</span>                <span class="kr">input</span><span class="p">.</span><span class="n">positionOS</span><span class="p">.</span><span class="n">xyz</span> <span class="o">-=</span> <span class="n">saturate</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="n">movingPos</span><span class="p">)</span> <span class="o">*</span> <span class="kr">input</span><span class="p">.</span><span class="n">normal</span> <span class="o">*</span> <span class="n">_Extrude</span><span class="p">;</span>
                <span class="n">VertexPositionInputs</span> <span class="n">vertexInput</span> <span class="o">=</span> <span class="n">GetVertexPositionInputs</span><span class="p">(</span><span class="kr">input</span><span class="p">.</span><span class="n">positionOS</span><span class="p">.</span><span class="n">xyz</span><span class="p">);</span>
                <span class="kr">output</span><span class="p">.</span><span class="n">projectionSpaceVertex</span> <span class="o">=</span> <span class="n">vertexInput</span><span class="p">.</span><span class="n">positionCS</span><span class="p">;</span>
                <span class="kr">output</span><span class="p">.</span><span class="n">uv</span> <span class="o">=</span> <span class="kr">input</span><span class="p">.</span><span class="n">uv</span><span class="p">;</span>
                <span class="kr">output</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">=</span> <span class="n">movingPos</span><span class="p">;</span>
                <span class="k">return</span> <span class="kr">output</span><span class="p">;</span>
            <span class="p">}</span>
 
            <span class="k">struct</span> <span class="n">g2f</span>
            <span class="p">{</span>
                <span class="n">float4</span> <span class="n">projectionSpaceVertex</span> <span class="o">:</span> <span class="n">SV_POSITION</span><span class="p">;</span>
                <span class="n">float4</span> <span class="n">dist</span> <span class="o">:</span> <span class="n">TEXCOORD1</span><span class="p">;</span>
                <span class="n">float4</span> <span class="n">uv</span> <span class="o">:</span> <span class="n">TEXCOORD0</span><span class="p">;</span>
                <span class="kt">float</span> <span class="n">movingPos</span> <span class="o">:</span> <span class="n">TEXCOORD2</span><span class="p">;</span>
                <span class="n">UNITY_VERTEX_OUTPUT_STEREO</span>
            <span class="p">};</span>
 
            <span class="p">[</span><span class="n">maxvertexcount</span><span class="p">(</span><span class="mi">3</span><span class="p">)]</span>
            <span class="kt">void</span> <span class="n">geom</span><span class="p">(</span><span class="n">triangle</span> <span class="n">v2g</span> <span class="n">i</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="k">inout</span> <span class="n">TriangleStream</span><span class="o">&lt;</span><span class="n">g2f</span><span class="o">&gt;</span> <span class="n">triangleStream</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">UNITY_SETUP_STEREO_EYE_INDEX_POST_VERTEX</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span>
 
                <span class="n">float2</span> <span class="n">p0</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">xy</span> <span class="o">/</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
                <span class="n">float2</span> <span class="n">p1</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">xy</span> <span class="o">/</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
                <span class="n">float2</span> <span class="n">p2</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">xy</span> <span class="o">/</span> <span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
 
                <span class="n">float2</span> <span class="n">edge0</span> <span class="o">=</span> <span class="n">p2</span> <span class="o">-</span> <span class="n">p1</span><span class="p">;</span>
                <span class="n">float2</span> <span class="n">edge1</span> <span class="o">=</span> <span class="n">p2</span> <span class="o">-</span> <span class="n">p0</span><span class="p">;</span>
                <span class="n">float2</span> <span class="n">edge2</span> <span class="o">=</span> <span class="n">p1</span> <span class="o">-</span> <span class="n">p0</span><span class="p">;</span>
 
                <span class="c1">// To find the distance to the opposite edge, we take the</span>
                <span class="c1">// formula for finding the area of a triangle Area = Base/2 * Height,</span>
                <span class="c1">// and solve for the Height = (Area * 2)/Base.</span>
                <span class="c1">// We can get the area of a triangle by taking its cross product</span>
                <span class="c1">// divided by 2.  However we can avoid dividing our area/base by 2</span>
                <span class="c1">// since our cross product will already be double our area.</span>
                <span class="kt">float</span> <span class="n">area</span> <span class="o">=</span> <span class="n">abs</span><span class="p">(</span><span class="n">edge1</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">edge2</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">edge1</span><span class="p">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">edge2</span><span class="p">.</span><span class="n">x</span><span class="p">);</span>
                <span class="kt">float</span> <span class="n">wireThickness</span> <span class="o">=</span> <span class="mi">800</span> <span class="o">-</span> <span class="n">_WireThickness</span><span class="p">;</span>
 
                <span class="n">g2f</span> <span class="n">o</span><span class="p">;</span>
                <span class="n">UNITY_INITIALIZE_VERTEX_OUTPUT_STEREO</span><span class="p">(</span><span class="n">o</span><span class="p">);</span>
                <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">xyz</span> <span class="o">=</span> <span class="n">float3</span><span class="p">(</span> <span class="p">(</span><span class="n">area</span> <span class="o">/</span> <span class="n">length</span><span class="p">(</span><span class="n">edge0</span><span class="p">)),</span> <span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">*</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span> <span class="o">*</span> <span class="n">wireThickness</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="mi">1</span><span class="p">.</span><span class="mi">0</span> <span class="o">/</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">uv</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">uv</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">movingPos</span><span class="p">;</span>
                <span class="n">triangleStream</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">o</span><span class="p">);</span>
 
                <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">xyz</span> <span class="o">=</span> <span class="n">float3</span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">area</span> <span class="o">/</span> <span class="n">length</span><span class="p">(</span><span class="n">edge1</span><span class="p">)),</span> <span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">)</span> <span class="o">*</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span> <span class="o">*</span> <span class="n">wireThickness</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="mi">1</span><span class="p">.</span><span class="mi">0</span> <span class="o">/</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">uv</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">uv</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">movingPos</span><span class="p">;</span>
                <span class="n">triangleStream</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">o</span><span class="p">);</span>
 
                <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">projectionSpaceVertex</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">xyz</span> <span class="o">=</span> <span class="n">float3</span><span class="p">(</span><span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">.</span><span class="mi">0</span><span class="p">,</span> <span class="p">(</span><span class="n">area</span> <span class="o">/</span> <span class="n">length</span><span class="p">(</span><span class="n">edge2</span><span class="p">)))</span> <span class="o">*</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span> <span class="o">*</span> <span class="n">wireThickness</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">dist</span><span class="p">.</span><span class="n">w</span> <span class="o">=</span> <span class="mi">1</span><span class="p">.</span><span class="mi">0</span> <span class="o">/</span> <span class="n">o</span><span class="p">.</span><span class="n">projectionSpaceVertex</span><span class="p">.</span><span class="n">w</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">uv</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">uv</span><span class="p">;</span>
                <span class="n">o</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">=</span> <span class="n">i</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">movingPos</span><span class="p">;</span>
                <span class="n">triangleStream</span><span class="p">.</span><span class="n">Append</span><span class="p">(</span><span class="n">o</span><span class="p">);</span>
            <span class="p">}</span>
 
            <span class="n">half4</span> <span class="n">frag</span><span class="p">(</span><span class="n">g2f</span> <span class="n">i</span><span class="p">)</span> <span class="o">:</span> <span class="n">SV_Target</span>
            <span class="p">{</span>
                <span class="kt">float</span> <span class="n">minDistanceToEdge</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">dist</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">min</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">dist</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="n">i</span><span class="p">.</span><span class="n">dist</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span> <span class="o">*</span> <span class="n">i</span><span class="p">.</span><span class="n">dist</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
                <span class="n">float4</span> <span class="n">mainTex</span> <span class="o">=</span> <span class="n">tex2D</span><span class="p">(</span><span class="n">_MainTex</span><span class="p">,</span> <span class="n">i</span><span class="p">.</span><span class="n">uv</span><span class="p">.</span><span class="n">xy</span><span class="p">);</span>
 
                <span class="c1">// show texture where there is no wireframe</span>
                <span class="c1">// also fades the wireframe over the moving position</span>
                <span class="k">if</span><span class="p">(</span><span class="n">minDistanceToEdge</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">.</span><span class="mi">9</span><span class="o">*</span> <span class="mi">1</span><span class="o">-</span> <span class="n">saturate</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">-</span> <span class="n">_WireFrameStay</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="c1">// discard pixels where there is no wireframe earlier</span>
                    <span class="n">clip</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">movingPos</span> <span class="o">-</span> <span class="mi">0</span><span class="p">.</span><span class="mi">2</span><span class="p">);</span>
                    <span class="k">return</span> <span class="n">mainTex</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="c1">// discard pixels over the moving position</span>
                <span class="n">clip</span><span class="p">(</span><span class="n">i</span><span class="p">.</span><span class="n">movingPos</span><span class="p">);</span>
                <span class="k">return</span> <span class="n">_WireColor</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">ENDHLSL</span>
        <span class="p">}</span>
    <span class="p">}</span>
 
    <span class="n">FallBack</span> <span class="s">"Hidden/Universal Render Pipeline/FallbackError"</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="Shader"/><summary type="html"><![CDATA[溶解效果的记录]]></summary></entry><entry><title type="html">Unity导出原生AAR嵌入原生</title><link href="https://jiehengdong.github.io/blog/2024/Unity%E5%AF%BC%E5%87%BA%E5%8E%9F%E7%94%9FAAR%E5%B5%8C%E5%85%A5%E5%8E%9F%E7%94%9F/" rel="alternate" type="text/html" title="Unity导出原生AAR嵌入原生"/><published>2024-04-01T10:14:00+00:00</published><updated>2024-04-01T10:14:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/Unity%E5%AF%BC%E5%87%BA%E5%8E%9F%E7%94%9FAAR%E5%B5%8C%E5%85%A5%E5%8E%9F%E7%94%9F</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/Unity%E5%AF%BC%E5%87%BA%E5%8E%9F%E7%94%9FAAR%E5%B5%8C%E5%85%A5%E5%8E%9F%E7%94%9F/"><![CDATA[<h2 id="unity原生接入">Unity原生接入</h2> <p>为了更好的适应跨平台的开发需求，需要Unity结合原生开发</p> <ul> <li>环境 Unity 2022.3.21f1f1</li> </ul> <h3 id="unity导出设置">Unity导出设置</h3> <p>切换当前平台到对应平台，这里用安卓平台举例</p> <p>切换当前平台到对应安卓平台，如果未安装安卓插件去 Unityhub/Installs/your Editor/Add moudles</p> <p>进入项目设置</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <img src="/assets/img/Unity_Setting.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p>具体目标平台根据项目需求选择，ScriptingBackend 选择IL2CPP</p> <p>使用Android studio 打开(软件安装等不赘述)</p> <h3 id="原生项目设置">原生项目设置</h3> <p>原生项目结构</p> <div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">launcher</span><span class="pi">:</span>
  <span class="na">manifest</span><span class="pi">:</span>
  <span class="na">res</span><span class="pi">:</span>
    <span class="na">mipmap</span><span class="pi">:</span>
    <span class="na">values</span><span class="pi">:</span>

<span class="na">unityLibrary</span><span class="pi">:</span>
  <span class="na">manifests</span><span class="pi">:</span>
  <span class="na">java</span><span class="pi">:</span>
</code></pre></div></div> <ul> <li>需要把launcher/res/minmap 拷贝到 unityLibrary/res 路径下</li> <li>需要把launcher/res/values/string.xml 拷贝到 unityLibrary/res 路径下</li> </ul> <p>注释掉入口代码</p> <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;application</span> <span class="na">android:extractNativeLibs=</span><span class="s">"true"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"unity.splash-mode"</span> <span class="na">android:value=</span><span class="s">"0"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"unity.splash-enable"</span> <span class="na">android:value=</span><span class="s">"True"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"unity.launch-fullscreen"</span> <span class="na">android:value=</span><span class="s">"True"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"notch.config"</span> <span class="na">android:value=</span><span class="s">"portrait|landscape"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"unity.auto-report-fully-drawn"</span> <span class="na">android:value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;activity</span> <span class="na">android:name=</span><span class="s">"com.unity3d.player.UnityPlayerActivity"</span> <span class="na">android:theme=</span><span class="s">"@style/UnityThemeSelector"</span> <span class="na">android:screenOrientation=</span><span class="s">"fullUser"</span> <span class="na">android:launchMode=</span><span class="s">"singleTask"</span> <span class="na">android:configChanges=</span><span class="s">"mcc|mnc|locale|touchscreen|keyboard|keyboardHidden|navigation|orientation|screenLayout|uiMode|screenSize|smallestScreenSize|fontScale|layoutDirection|density"</span> <span class="na">android:resizeableActivity=</span><span class="s">"false"</span> <span class="na">android:hardwareAccelerated=</span><span class="s">"false"</span><span class="nt">&gt;</span>
<span class="c">&lt;!--      &lt;intent-filter&gt;--&gt;</span>
<span class="c">&lt;!--        &lt;category android:name="android.intent.category.LAUNCHER" /&gt;--&gt;</span>
<span class="c">&lt;!--        &lt;action android:name="android.intent.action.MAIN" /&gt;--&gt;</span>
<span class="c">&lt;!--      &lt;/intent-filter&gt;--&gt;</span>
      <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"unityplayer.UnityActivity"</span> <span class="na">android:value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
      <span class="nt">&lt;meta-data</span> <span class="na">android:name=</span><span class="s">"notch_support"</span> <span class="na">android:value=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/activity&gt;</span>
</code></pre></div></div> <h3 id="gradle-导出">Gradle 导出</h3> <p>根据自己项目设置使用Gradle导出AAR包，提供给原生接入</p>]]></content><author><name></name></author><category term="Unity"/><category term="workflow"/><summary type="html"><![CDATA[与原生交互相关]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://jiehengdong.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://jiehengdong.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://jiehengdong.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://jiehengdong.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://jiehengdong.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry></feed>